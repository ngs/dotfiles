set nocompatible              " be iMproved, required
filetype off                  " required

" https://git.io/vy8Iu
execute pathogen#infect()

call plug#begin('~/.vim/plugged')

Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'Rip-Rip/clang_complete'
Plug 'Shougo/neosnippet-snippets'
Plug 'Shougo/neosnippet.vim'
Plug 'derekwyatt/vim-scala', { 'for': ['scala'] }
Plug 'digitaltoad/vim-jade', { 'for': ['jade', 'pug'] }
Plug 'docunext/closetag.vim', { 'for': ['html', 'erb', 'php', 'xml', 'xslt'] }
Plug 'ekalinin/Dockerfile.vim'
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries', 'for': ['go'] }
Plug 'garbas/vim-snipmate'
Plug 'godlygeek/tabular'
Plug 'honza/vim-snippets'
Plug 'jparise/vim-graphql'
Plug 'junegunn/goyo.vim'
Plug 'kchmck/vim-coffee-script', { 'for': ['cjsx', 'coffee'] }
Plug 'keith/swift.vim', { 'for': ['swift'] }
Plug 'leafgarland/typescript-vim'
Plug 'mtscout6/vim-cjsx', { 'for': ['cjsx', 'coffee'] }
Plug 'othree/xml.vim', { 'for': ['xml'] }
Plug 'pangloss/vim-javascript', { 'for': ['js'] }
Plug 'plasticboy/vim-markdown', { 'for': ['md', 'mkdn', 'markdown'] }
Plug 'posva/vim-vue', { 'for': ['vue'] }
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prettier/vim-prettier', { 'do': 'yarn install', 'for': ['ts', 'js', 'javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'md', 'markdown', 'vue'] }
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'slim-template/vim-slim', { 'for': ['slim'] }
Plug 'thoughtbot/vim-rspec', { 'for': ['rb'] }
Plug 'tomlion/vim-solidity', { 'for': ['sol'] }
Plug 'tomtom/tlib_vim'
Plug 'tpope/vim-bundler', { 'for': ['rb'] }
Plug 'tpope/vim-rails', { 'for': ['rb'] }
Plug 'vim-ruby/vim-ruby', { 'for': ['rb'] }
Plug 'vim-syntastic/syntastic'

if v:version >= 800
  Plug 'Quramy/tsuquyomi', { 'do': 'npm i -g typescript', 'for': ['ts', 'tsx'] }
endif

if v:version > 801 || (v:version == 801 && has( 'patch2269' ))
  Plug 'ycm-core/YouCompleteMe'
endif

" All of your Plugins must be added before the following line
call plug#end()
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
filetype plugin on
"
" Brief help
" :PluginList          - list configured plugins
" :PluginInstall(!)    - install (update) plugins
" :PluginSearch(!) foo - search (or refresh cache first) for foo
" :PluginClean(!)      - confirm (or auto-approve) removal of unused plugins
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

autocmd filetype crontab setlocal nobackup nowritebackup
autocmd BufNewFile,BufRead *.cson set filetype=coffee

let s:clang_library_path='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib'

if isdirectory(s:clang_library_path)
  let g:clang_library_path=s:clang_library_path
endif

" =================================================
" Editor
" =================================================

" set regexpengine=1
colorscheme Tomorrow-Night
filetype plugin indent on
retab
set autoindent
set bs=indent,eol,start
set cmdheight=1
set expandtab
set laststatus=1
set list
set listchars=tab:>_,trail:\.,nbsp:%,eol:\$
set notitle
set number
set ruler
set shiftwidth=2
set showcmd
set showmatch
set smartindent
set t_Co=256
set tabstop=2
set title
syntax enable

" =================================================
" autocmd
" =================================================

" Close XML tags
autocmd FileType html,erb,php,xml,xslt let b:closetag_html_style=1
autocmd FileType html,erb,php,xml,xslt source ~/.vim/plugged/closetag.vim/plugin/closetag.vim

let g:vim_markdown_folding_disabled=1

" Highlight status line on edit mode
augroup InsertHook
  autocmd!
  autocmd InsertEnter * highlight StatusLine guifg=#ccdc90 guibg=#2E4340
  autocmd InsertLeave * highlight StatusLine guifg=#2E4340 guibg=#ccdc90
augroup END

" Remove all trailing spaces on save
autocmd BufWritePre * :%s/\s\+$//e

" =================================================
" Highlight
" =================================================

highlight LineNr     ctermfg=darkyellow
highlight NonText    ctermfg=darkblue   ctermbg=NONE guibg=darkgray
highlight Folded     ctermfg=blue
highlight SpecialKey ctermfg=235   ctermbg=NONE
highlight Pmenu      ctermbg=lightgray  ctermfg=23
highlight PmenuSel   ctermbg=black      ctermfg=yellow
highlight PmenuSbar  ctermbg=yellow
" Zenkaku Space
highlight ZenkakuSpace cterm=underline ctermfg=darkgray ctermbg=NONE
match ZenkakuSpace /ã€€/
" Hankaku Space
"highlight HankakuSpace cterm=underline ctermfg=darkgray ctermbg=NONE
"match HankakuSpace /\s/

" =================================================
" NeoComplCache
" =================================================

let g:acp_enableAtStartup = 0


" Enable omni completion.
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags

" =================================================
" Go
" =================================================
let g:go_fmt_command = "goimports"
let g:go_highlight_build_constraints = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_structs = 1
let g:go_highlight_types = 1
let g:go_def_mode='gopls'
let g:go_info_mode='gopls'

" =================================================
" NERDTree
" =================================================
let NERDTreeShowHidden=1

" =================================================
" syntastic
" https://git.io/vyvFh
" =================================================
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['swift'] }

" let g:syntastic_swift_checkers = ['swiftpm', 'swiftlint']
let g:syntastic_swift_checkers = ['swiftlint']
let g:syntastic_ruby_checkers = ['rubocop']
" let g:syntastic_go_checkers = ['golint', 'govet', 'go']
" let g:syntastic_go_checkers = ['golint', 'go']

" =================================================
" Prettier
" =================================================

let g:prettier#autoformat = 0
if v:version < 800
  autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue Prettier
else
  autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue PrettierAsync
endif

" =================================================
" Goyo
" =================================================
let g:goyo_width = 120

" =================================================
" Snipmate
" =================================================
let g:snipMate = { 'snippet_version' : 1 }


" =================================================
" YouCompleteMe
" =================================================
let g:ycm_key_list_stop_completion = [ '<C-y>', '<Enter>' ]
